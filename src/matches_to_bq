from pathlib import Path
import pandas as pd
from prefect import flow, task
from prefect_gcp.cloud_storage import GcsBucket
from prefect_gcp import GcpCredentials

@task(retries=3)
def extract_from_gcs(tour: str, subgroup: str, year: int) -> Path:
    """Download trip data from GCS"""
    gcs_path = f"data/matches/{tour}_matches{subgroup}_{year}"
    gcs_block = GcsBucket.load("nyc-taxi-datalake")
    gcs_block.get_directory(from_path=gcs_path, local_path=f"../data/")
    return Path(f"{gcs_path}")

@task()
def transform(path: Path) -> pd.DataFrame:
    """Transform parquet to df"""
    df = pd.read_parquet(path)
    return df

@task()
def write_bq(df: pd.DataFrame,dest_tab: str) -> None:
    """Write DataFrame to BiqQuery"""

    gcp_credentials_block = GcpCredentials.load("tennis-creds")

    df.to_gbq(
        destination_table= dest_tab,
        project_id= 'tennis-analysis-405301',
        credentials = gcp_credentials_block.get_credentials_from_service_account(),
        chunksize=500_000,
        if_exists="append",
    )
    return len(df)

@flow()
def etl_gcs_to_bq(tour:str, subgroup:str, year:int, dest_tab:str):
    """Main ETL flow to load data into Big Query"""

    path = extract_from_gcs(tour, subgroup, year)
    df = transform(path)
    write_bq(df,dest_tab)
    
@flow()
def etl_bq_matches_flow(
    tour: str = "atp",subgroup: str = "", years: list[int] = [2023], dest_tab: str = 'tennis_data.atp_tour' 
):
    for year in years:
        etl_gcs_to_bq(tour, subgroup, year, dest_tab)